substitutions:
  _REGION: us-central1
  _SERVICE: ai-gateway
  _ENV: production
  _AR_REPO: ai-gateway
  _CPU: "2"
  _MEMORY: "2Gi"

steps:
  # Build the container image (Artifact Registry)
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$COMMIT_SHA',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:latest',
      '.'
    ]

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:latest']

  # Deploy container image to Cloud Run (parametrized)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', '${_SERVICE}',
      '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$COMMIT_SHA',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--execution-environment', 'gen2',
      '--concurrency', '100',
      '--cpu', '${_CPU}',
      '--memory', '${_MEMORY}',
      '--set-env-vars', 'ENVIRONMENT=${_ENV}',
      # Secrets (ensure they exist per project)
      '--update-secrets', 'SECRET_KEY=SECRET_KEY:latest',
      '--update-secrets', 'DATABASE_URL=DATABASE_URL:latest',
      '--update-secrets', 'REDIS_URL=REDIS_URL:latest'
    ]

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$COMMIT_SHA'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:latest'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'